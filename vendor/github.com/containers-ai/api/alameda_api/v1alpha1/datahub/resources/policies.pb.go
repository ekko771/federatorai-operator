// Code generated by protoc-gen-go. DO NOT EDIT.
// source: alameda_api/v1alpha1/datahub/resources/policies.proto

package resources

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//*
//  Recommendation policy. A policy may be either stable or compact.
type RecommendationPolicy int32

const (
	RecommendationPolicy_RECOMMENDATION_POLICY_UNDEFINED RecommendationPolicy = 0
	RecommendationPolicy_STABLE                          RecommendationPolicy = 1
	RecommendationPolicy_COMPACT                         RecommendationPolicy = 2
)

var RecommendationPolicy_name = map[int32]string{
	0: "RECOMMENDATION_POLICY_UNDEFINED",
	1: "STABLE",
	2: "COMPACT",
}

var RecommendationPolicy_value = map[string]int32{
	"RECOMMENDATION_POLICY_UNDEFINED": 0,
	"STABLE":                          1,
	"COMPACT":                         2,
}

func (x RecommendationPolicy) String() string {
	return proto.EnumName(RecommendationPolicy_name, int32(x))
}

func (RecommendationPolicy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5bc9883998bf3537, []int{0}
}

//*
// Represents the priority of a node
type NodePriority struct {
	Nodes                []string `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodePriority) Reset()         { *m = NodePriority{} }
func (m *NodePriority) String() string { return proto.CompactTextString(m) }
func (*NodePriority) ProtoMessage()    {}
func (*NodePriority) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bc9883998bf3537, []int{0}
}

func (m *NodePriority) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodePriority.Unmarshal(m, b)
}
func (m *NodePriority) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodePriority.Marshal(b, m, deterministic)
}
func (m *NodePriority) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodePriority.Merge(m, src)
}
func (m *NodePriority) XXX_Size() int {
	return xxx_messageInfo_NodePriority.Size(m)
}
func (m *NodePriority) XXX_DiscardUnknown() {
	xxx_messageInfo_NodePriority.DiscardUnknown(m)
}

var xxx_messageInfo_NodePriority proto.InternalMessageInfo

func (m *NodePriority) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type Selector struct {
	Selector             map[string]string `protobuf:"bytes,1,rep,name=selector,proto3" json:"selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Selector) Reset()         { *m = Selector{} }
func (m *Selector) String() string { return proto.CompactTextString(m) }
func (*Selector) ProtoMessage()    {}
func (*Selector) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bc9883998bf3537, []int{1}
}

func (m *Selector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Selector.Unmarshal(m, b)
}
func (m *Selector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Selector.Marshal(b, m, deterministic)
}
func (m *Selector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Selector.Merge(m, src)
}
func (m *Selector) XXX_Size() int {
	return xxx_messageInfo_Selector.Size(m)
}
func (m *Selector) XXX_DiscardUnknown() {
	xxx_messageInfo_Selector.DiscardUnknown(m)
}

var xxx_messageInfo_Selector proto.InternalMessageInfo

func (m *Selector) GetSelector() map[string]string {
	if m != nil {
		return m.Selector
	}
	return nil
}

//*
// Represents a recommended pod-to-node assignment (i.e. pod placement)
//
type AssignPodPolicy struct {
	Time *timestamp.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	// Types that are valid to be assigned to Policy:
	//	*AssignPodPolicy_NodePriority
	//	*AssignPodPolicy_NodeSelector
	//	*AssignPodPolicy_NodeName
	Policy               isAssignPodPolicy_Policy `protobuf_oneof:"policy"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *AssignPodPolicy) Reset()         { *m = AssignPodPolicy{} }
func (m *AssignPodPolicy) String() string { return proto.CompactTextString(m) }
func (*AssignPodPolicy) ProtoMessage()    {}
func (*AssignPodPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_5bc9883998bf3537, []int{2}
}

func (m *AssignPodPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignPodPolicy.Unmarshal(m, b)
}
func (m *AssignPodPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignPodPolicy.Marshal(b, m, deterministic)
}
func (m *AssignPodPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignPodPolicy.Merge(m, src)
}
func (m *AssignPodPolicy) XXX_Size() int {
	return xxx_messageInfo_AssignPodPolicy.Size(m)
}
func (m *AssignPodPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignPodPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_AssignPodPolicy proto.InternalMessageInfo

func (m *AssignPodPolicy) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type isAssignPodPolicy_Policy interface {
	isAssignPodPolicy_Policy()
}

type AssignPodPolicy_NodePriority struct {
	NodePriority *NodePriority `protobuf:"bytes,2,opt,name=node_priority,json=nodePriority,proto3,oneof"`
}

type AssignPodPolicy_NodeSelector struct {
	NodeSelector *Selector `protobuf:"bytes,3,opt,name=node_selector,json=nodeSelector,proto3,oneof"`
}

type AssignPodPolicy_NodeName struct {
	NodeName string `protobuf:"bytes,4,opt,name=node_name,json=nodeName,proto3,oneof"`
}

func (*AssignPodPolicy_NodePriority) isAssignPodPolicy_Policy() {}

func (*AssignPodPolicy_NodeSelector) isAssignPodPolicy_Policy() {}

func (*AssignPodPolicy_NodeName) isAssignPodPolicy_Policy() {}

func (m *AssignPodPolicy) GetPolicy() isAssignPodPolicy_Policy {
	if m != nil {
		return m.Policy
	}
	return nil
}

func (m *AssignPodPolicy) GetNodePriority() *NodePriority {
	if x, ok := m.GetPolicy().(*AssignPodPolicy_NodePriority); ok {
		return x.NodePriority
	}
	return nil
}

func (m *AssignPodPolicy) GetNodeSelector() *Selector {
	if x, ok := m.GetPolicy().(*AssignPodPolicy_NodeSelector); ok {
		return x.NodeSelector
	}
	return nil
}

func (m *AssignPodPolicy) GetNodeName() string {
	if x, ok := m.GetPolicy().(*AssignPodPolicy_NodeName); ok {
		return x.NodeName
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AssignPodPolicy) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AssignPodPolicy_NodePriority)(nil),
		(*AssignPodPolicy_NodeSelector)(nil),
		(*AssignPodPolicy_NodeName)(nil),
	}
}

func init() {
	proto.RegisterEnum("containersai.alameda.v1alpha1.datahub.resources.RecommendationPolicy", RecommendationPolicy_name, RecommendationPolicy_value)
	proto.RegisterType((*NodePriority)(nil), "containersai.alameda.v1alpha1.datahub.resources.NodePriority")
	proto.RegisterType((*Selector)(nil), "containersai.alameda.v1alpha1.datahub.resources.Selector")
	proto.RegisterMapType((map[string]string)(nil), "containersai.alameda.v1alpha1.datahub.resources.Selector.SelectorEntry")
	proto.RegisterType((*AssignPodPolicy)(nil), "containersai.alameda.v1alpha1.datahub.resources.AssignPodPolicy")
}

func init() {
	proto.RegisterFile("alameda_api/v1alpha1/datahub/resources/policies.proto", fileDescriptor_5bc9883998bf3537)
}

var fileDescriptor_5bc9883998bf3537 = []byte{
	// 452 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0x4f, 0x6b, 0xdb, 0x4c,
	0x10, 0xc6, 0x2d, 0x3b, 0xaf, 0x5f, 0x7b, 0x9c, 0x50, 0x23, 0x72, 0x30, 0x86, 0x92, 0xe0, 0xf6,
	0x10, 0x0a, 0x5d, 0x11, 0x97, 0x42, 0xff, 0xd0, 0x83, 0x2d, 0xab, 0x8d, 0x21, 0x96, 0x85, 0xa2,
	0x1e, 0xda, 0x8b, 0xbb, 0x96, 0xa6, 0xce, 0x52, 0x69, 0x57, 0x68, 0xd7, 0x01, 0x7d, 0xa7, 0x9e,
	0xfa, 0x09, 0xcb, 0xae, 0x25, 0xe1, 0xde, 0x9a, 0xde, 0x66, 0x57, 0x3b, 0xcf, 0x33, 0xf3, 0x9b,
	0x11, 0xbc, 0xa6, 0x29, 0xcd, 0x30, 0xa1, 0x1b, 0x9a, 0x33, 0xe7, 0xe1, 0x9a, 0xa6, 0xf9, 0x3d,
	0xbd, 0x76, 0x12, 0xaa, 0xe8, 0xfd, 0x7e, 0xeb, 0x14, 0x28, 0xc5, 0xbe, 0x88, 0x51, 0x3a, 0xb9,
	0x48, 0x59, 0xcc, 0x50, 0x92, 0xbc, 0x10, 0x4a, 0xd8, 0x4e, 0x2c, 0xb8, 0xa2, 0x8c, 0x63, 0x21,
	0x29, 0x23, 0x95, 0x06, 0xa9, 0xf3, 0x49, 0x95, 0x4f, 0x9a, 0xfc, 0xf1, 0xc5, 0x4e, 0x88, 0x5d,
	0x8a, 0x8e, 0x49, 0xdf, 0xee, 0xbf, 0x3b, 0x8a, 0x65, 0x28, 0x15, 0xcd, 0xf2, 0x83, 0xe2, 0xe4,
	0x39, 0x9c, 0xfa, 0x22, 0xc1, 0xa0, 0x60, 0xa2, 0x60, 0xaa, 0xb4, 0xcf, 0xe1, 0x3f, 0x2e, 0x12,
	0x94, 0x23, 0xeb, 0xb2, 0x73, 0xd5, 0x0f, 0x0f, 0x87, 0xc9, 0x4f, 0x0b, 0x7a, 0x77, 0x98, 0x62,
	0xac, 0x44, 0x61, 0xc7, 0xd0, 0x93, 0x55, 0x6c, 0x5e, 0x0d, 0xa6, 0x9f, 0xc8, 0x23, 0xeb, 0x22,
	0xb5, 0x58, 0x13, 0x78, 0x5c, 0x15, 0x65, 0xd8, 0x08, 0x8f, 0xdf, 0xc3, 0xd9, 0x1f, 0x9f, 0xec,
	0x21, 0x74, 0x7e, 0x60, 0x39, 0xb2, 0x2e, 0xad, 0xab, 0x7e, 0xa8, 0x43, 0x5d, 0xea, 0x03, 0x4d,
	0xf7, 0x38, 0x6a, 0x9b, 0xbb, 0xc3, 0xe1, 0x5d, 0xfb, 0x8d, 0x35, 0xf9, 0xd5, 0x86, 0x27, 0x33,
	0x29, 0xd9, 0x8e, 0x07, 0x22, 0x09, 0x34, 0xc2, 0xd2, 0x26, 0x70, 0xa2, 0x7b, 0x37, 0x02, 0x83,
	0xe9, 0x98, 0x1c, 0xc0, 0x90, 0x1a, 0x0c, 0x89, 0x6a, 0x30, 0xa1, 0x79, 0x67, 0x27, 0x70, 0xa6,
	0x7b, 0xdf, 0xe4, 0x15, 0x19, 0xe3, 0x32, 0x98, 0x7e, 0x78, 0x74, 0xab, 0xc7, 0x78, 0x6f, 0x5a,
	0xe1, 0x29, 0x3f, 0xc6, 0xfd, 0xad, 0x72, 0x69, 0x80, 0x76, 0x8c, 0xcb, 0xdb, 0x7f, 0x06, 0x5a,
	0x3b, 0x34, 0xd3, 0x7a, 0x0a, 0x7d, 0xe3, 0xc0, 0x69, 0x86, 0xa3, 0x13, 0x4d, 0xea, 0xa6, 0x15,
	0xf6, 0xf4, 0x95, 0x4f, 0x33, 0x9c, 0xf7, 0xa0, 0x6b, 0x76, 0xac, 0x7c, 0x11, 0xc1, 0x79, 0x88,
	0xb1, 0xc8, 0x32, 0xe4, 0x09, 0x55, 0x4c, 0xf0, 0x0a, 0xdc, 0x33, 0xb8, 0x08, 0x3d, 0x77, 0xbd,
	0x5a, 0x79, 0xfe, 0x62, 0x16, 0x2d, 0xd7, 0xfe, 0x26, 0x58, 0xdf, 0x2e, 0xdd, 0x2f, 0x9b, 0xcf,
	0xfe, 0xc2, 0xfb, 0xb8, 0xf4, 0xbd, 0xc5, 0xb0, 0x65, 0x03, 0x74, 0xef, 0xa2, 0xd9, 0xfc, 0xd6,
	0x1b, 0x5a, 0xf6, 0x00, 0xfe, 0x77, 0xd7, 0xab, 0x60, 0xe6, 0x46, 0xc3, 0xf6, 0xdc, 0xfb, 0xea,
	0xee, 0x98, 0xd2, 0xb5, 0xc6, 0x22, 0x3b, 0x5a, 0xdf, 0x97, 0x94, 0x39, 0x7a, 0xf7, 0xff, 0xee,
	0x3f, 0xd8, 0x76, 0xcd, 0x9c, 0x5e, 0xfd, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x42, 0x31, 0xfa, 0x50,
	0x38, 0x03, 0x00, 0x00,
}
